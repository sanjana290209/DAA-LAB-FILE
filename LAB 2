#------------lab2
#1  SINGLY LINKED LIST IS CIRCULAR OR NOT
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


def is_circular(head):
    if head is None:
        return False

    slow = head
    fast = head

    while fast is not None and fast.next is not None:
        slow = slow.next
        fast = fast.next.next

        if slow == fast:
            return True

    return False

head = Node(1)
head.next = Node(2)
head.next.next = Node(3)
head.next.next.next = Node(4)
head.next.next.next.next = Node(5)
head.next.next.next.next.next = head.next

print("Linked list is circular:", is_circular(head))

#2  remove duplicate in the array

def remove_duplicates(arr):
    a = []

    for b in arr:
        if b not in a:
            a += [b]

    return a

original_array = [1, 12, 11, 10, 11, 1]
result = remove_duplicates(original_array)
print(result)

#program to write palindrom

def is_palindrome(s):
    return s == s[::-1]
k = "mom"
res = is_palindrome(k)
print(res)

#permutaions of abc
from itertools import permutations
chars = 'abc'
perms = permutations(chars)
for perm in perms:
    print(''.join(perm))
